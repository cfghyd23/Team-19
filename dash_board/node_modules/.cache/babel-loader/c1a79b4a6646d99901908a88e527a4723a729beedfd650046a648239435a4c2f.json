{"ast":null,"code":"var _jsxFileName = \"/Users/raunakkumar/Desktop/dashboard/src/App.js\";\nimport React from 'react';\nimport './App.css'; // Assuming you have a separate CSS file for styling\nimport BarChart from './Components/BarChart'; // Import the chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  let {\n    title,\n    content,\n    chartData\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nconst App = () => {\n  const totalRows = 2;\n  const cardsPerRow = 4;\n  const totalCards = totalRows * cardsPerRow;\n  const renderCards = () => {\n    const cards = [];\n    const chartData1 = {\n      labels: ['Label 1', 'Label 2', 'Label 3'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: [10, 20, 30],\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'black',\n        borderWidth: 2\n      }]\n    };\n    const chartData2 = {\n      labels: ['Label A', 'Label B', 'Label C'],\n      datasets: [{\n        label: 'Dataset 2',\n        data: [40, 50, 60],\n        backgroundColor: 'rgba(53, 162, 235, 1)',\n        borderColor: 'black',\n        borderWidth: 2\n      }]\n    };\n    cards.push( /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Chart 1\",\n      content: \"This is the first chart\",\n      chartData: chartData1\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this));\n    cards.push( /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Chart 2\",\n      content: \"This is the second chart\",\n      chartData: chartData2\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this));\n    return cards;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: renderCards()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BarChart","jsxDEV","_jsxDEV","Card","_ref","title","content","chartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","App","totalRows","cardsPerRow","totalCards","renderCards","cards","chartData1","labels","datasets","label","backgroundColor","borderColor","borderWidth","chartData2","push","_c2","$RefreshReg$"],"sources":["/Users/raunakkumar/Desktop/dashboard/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css'; // Assuming you have a separate CSS file for styling\nimport BarChart from './Components/BarChart'; // Import the chart components\n\nconst Card = ({ title, content, chartData }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <h2>{title}</h2>\n        <p>{content}</p>\n        <BarChart data={chartData} /> {/* Render the chart component inside the card */}\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const totalRows = 2;\n  const cardsPerRow = 4;\n  const totalCards = totalRows * cardsPerRow;\n\n  const renderCards = () => {\n    const cards = [];\n\n    const chartData1 = {\n      labels: ['Label 1', 'Label 2', 'Label 3'],\n      datasets: [\n        {\n          label: 'Dataset 1',\n          data: [10, 20, 30],\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'black',\n          borderWidth: 2,\n        },\n      ],\n    };\n\n    const chartData2 = {\n      labels: ['Label A', 'Label B', 'Label C'],\n      datasets: [\n        {\n          label: 'Dataset 2',\n          data: [40, 50, 60],\n          backgroundColor: 'rgba(53, 162, 235, 1)',\n          borderColor: 'black',\n          borderWidth: 2,\n        },\n      ],\n    };\n\n    cards.push(\n      <Card\n        key={0}\n        title=\"Chart 1\"\n        content=\"This is the first chart\"\n        chartData={chartData1}\n      />\n    );\n\n    cards.push(\n      <Card\n        key={1}\n        title=\"Chart 2\"\n        content=\"This is the second chart\"\n        chartData={chartData2}\n      />\n    );\n\n    return cards;\n  };\n\n  return <div className=\"card-container\">{renderCards()}</div>;\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}